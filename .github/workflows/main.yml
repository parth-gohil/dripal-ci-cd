name: CI/CD Pipeline
on:
  push:
    branches: [ main ]

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
      # Step 1
      - uses: actions/checkout@v2
      # Step 2
      - run: composer install -o

  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/main'
    steps:
     # Step 1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: login to aws ECR
        run: aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 117011209924.dkr.ecr.ap-south-1.amazonaws.com
      - name: docker build
        run: docker build -t drupal-mysql ../
      - name: change tags
        run: docker tag drupal-mysql:latest 117011209924.dkr.ecr.ap-south-1.amazonaws.com/drupal-mysql:latest
      - name: push image
        run: docker push 117011209924.dkr.ecr.ap-south-1.amazonaws.com/drupal-mysql:latest

     # Step 2
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name Drupal_Application \
            --deployment-group-name drupal_group \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
